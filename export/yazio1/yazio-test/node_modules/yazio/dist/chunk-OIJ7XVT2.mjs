import{b as l,c as e}from"./chunk-IPN6EH6Z.mjs";var s=e.object({token_type:e.string(),access_token:e.string(),refresh_token:e.string(),expires_in:e.number(),expires_at:e.number()}),c=e.union([s,e.function().returns(e.union([s,e.promise(s),e.null()]))]),o=e.object({username:e.string(),password:e.string()}),f=e.union([o,e.promise(o),e.function().returns(e.union([o,e.promise(o),e.null()])),e.promise(o)]),a=e.function().args(e.object({token:s})).returns(e.any()),p=e.union([e.object({credentials:f,token:e.undefined(),onRefresh:a.optional()}),e.object({credentials:e.undefined(),token:c,onRefresh:a.optional()}),e.object({credentials:f,token:c,onRefresh:a.optional()})]);var h=async n=>{if(typeof n=="function"){let t=n();return t instanceof Promise?await t:t}else return n instanceof Promise?await n:n||null},d=async n=>{if(typeof n=="function"){let t=n();return t instanceof Promise?await t:t}else return n instanceof Promise?await n:n||null},u=class{token=null;credentials=null;onRefresh=null;authenticate=async()=>{let t=await d(this.token);if(t&&t.expires_at>Date.now())return t;let r=await h(this.credentials);if(!r)throw new Error("Unable to resolve credentials. Please make sure `credentials` is passed correctly.");let i=await l(r);return this.token=i,this.onRefresh&&this.onRefresh({token:i}),i};constructor(t){let r=p.safeParse(t);if(!r.success)throw new Error("No credentials or token provided. At least one of them is required.");r.data.token&&(this.token=r.data.token),r.data.credentials&&(this.credentials=r.data.credentials),r.data.onRefresh&&(this.onRefresh=r.data.onRefresh)}};export{u as a};
